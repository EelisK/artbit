---
- name: Initial setup for Raspberry Pi
  hosts: raspberrypi
  gather_facts: false
  become: false
  roles:
    - common
  tasks:
    - name: Download and extrect Golang package
      become: true
      ansible.builtin.unarchive:
        src: https://go.dev/dl/go1.24.2.linux-arm64.tar.gz
        remote_src: true
        dest: /usr/local

    - name: Link Go binaries to /usr/bin
      become: true
      ansible.builtin.file:
        src: "/usr/local/go/bin/{{ item }}"
        dest: "/usr/bin/{{ item }}"
        state: link
      loop:
        - go
        - gofmt

    - name: Download TinyGo package
      ansible.builtin.get_url:
        url: https://github.com/tinygo-org/tinygo/releases/download/v0.37.0/tinygo_0.37.0_arm64.deb
        dest: /tmp/tinygo_0.37.0_arm64.deb
        mode: "0755"

    - name: Install TinyGo package
      become: true
      ansible.builtin.apt:
        deb: /tmp/tinygo_0.37.0_arm64.deb
        state: present

    - name: Make sure the artbit core directory exists
      become: true
      ansible.builtin.file:
        path: /opt/artbit
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"

    - name: Clear old contents of the artbit core directory
      ansible.builtin.file:
        path: /opt/artbit/*
        state: absent

    - name: Gather list of files in inventory_dir on local machine
      ansible.builtin.find:
        paths: "{{ inventory_dir }}"
        recurse: yes
        file_type: file
      delegate_to: localhost
      register: inventory_files

    - name: Get list of files not ignored by git on local machine # noqa: command-instead-of-module risky-shell-pipe
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          git ls-files --cached --others --exclude-standard | \
            while read l; do echo $(pwd)/$l ; done
        chdir: "{{ inventory_dir }}"
      delegate_to: localhost
      register: files_output
      changed_when: false

    - name: Compress files
      community.general.archive:
        path: "{{ files_output.stdout_lines }}"
        dest: "artbit-core.tar.gz"
        format: gz
        mode: "0755"
      delegate_to: localhost

    - name: Copy the compressed files to the Raspberry Pi
      ansible.builtin.copy:
        src: "artbit-core.tar.gz"
        dest: /tmp/artbit-core.tar.gz
        mode: "0755"

    - name: Remove the compressed file
      delegate_to: localhost
      ansible.builtin.file:
        path: "artbit-core.tar.gz"
        state: absent

    - name: Extract the compressed files
      ansible.builtin.unarchive:
        src: /tmp/artbit-core.tar.gz
        dest: /opt/artbit
        remote_src: yes

    - name: Remove the compressed file from the Raspberry Pi
      ansible.builtin.file:
        path: /tmp/artbit-core.tar.gz
        state: absent

    - name: Install poetry
      community.general.pipx:
        name: poetry
        state: present

    - name: Install dependencies
      ansible.builtin.shell:
        cmd: |
          ~/.local/bin/poetry shell
          ~/.local/bin/poetry install --no-interaction --no-ansi --all-extras
        chdir: /opt/artbit
        executable: /bin/bash
      register: poetry_install_output
      changed_when: '"No dependencies to install" not in poetry_install_output.stdout'
